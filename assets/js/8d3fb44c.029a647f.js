"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[237],{8339:e=>{e.exports=JSON.parse('{"functions":[{"name":"load_children","desc":"Loads child modules of a given container, applying an optional filter predicate.","params":[{"name":"container","desc":"the container whose children modules to load","lua_type":"Instance"},{"name":"predicate","desc":"optional filter to select which modules to load","lua_type":"predicate<Instance>?"}],"returns":[{"desc":"a promise resolving when all modules and their starts complete","lua_type":"any"}],"function_type":"method","source":{"line":270,"path":"lib/init.luau"}},{"name":"load_descendants","desc":"Loads descendant modules of a given container, applying an optional filter predicate.","params":[{"name":"container","desc":"the container whose descendant modules to load","lua_type":"Instance"},{"name":"predicate","desc":"optional filter to select which modules to load","lua_type":"predicate<Instance>?"}],"returns":[{"desc":"a promise resolving when all modules and their starts complete","lua_type":"any"}],"function_type":"method","source":{"line":283,"path":"lib/init.luau"}},{"name":"exposeInternal","desc":"Exposes the internal utility class, granting access to core loader functions and configuration.","params":[],"returns":[{"desc":"the internal helper and configuration object","lua_type":"internal"}],"function_type":"static","source":{"line":293,"path":"lib/init.luau"}}],"properties":[],"types":[],"name":"loader","desc":"a lightweight, lifecycle-aware & promise-based module loader for roblox. designed for modular architecture, dependency safety, and async initialisation.","source":{"line":38,"path":"lib/init.luau"}}')}}]);